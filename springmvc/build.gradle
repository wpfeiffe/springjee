apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'eclipse'

configurations {
    provided
}

sourceSets.main.compileClasspath += configurations.provided
sourceSets {
    integrationTest {
        java.srcDir file('src/integration-test/java')
        groovy.srcDir file('src/integration-test/groovy')
        resources.srcDir file('src/integration-test/resources')
    }
}

repositories {
    mavenCentral()
}

// The drivers we want to use
ext.drivers = ["firefox"]

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.+'

    provided 'org.jboss.spec:jboss-javaee-6.0:1.0.0.Final'

    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.+'
    compile 'org.springframework:spring-webmvc:3.1.3.RELEASE'
    compile 'org.springframework:spring-web:3.1.3.RELEASE'
    compile 'org.springframework.security:spring-security-core:3.1.3.RELEASE'
    compile 'org.springframework.security:spring-security-config:3.1.3.RELEASE'
    compile 'org.springframework.security:spring-security-web:3.1.3.RELEASE'
    compile 'org.springframework.data:spring-data-jpa:1.2.0.RELEASE'
    compile 'opensymphony:sitemesh:2.4.2'
    compile project(':ejb')

    testCompile 'junit:junit:4.+'
    testCompile ('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }


    integrationTestCompile 'org.gebish:geb-spock:0.9.0-RC-1'

    integrationTestCompile sourceSets.main.output
    integrationTestCompile configurations.testCompile
    integrationTestCompile sourceSets.test.output
    integrationTestRuntime configurations.testRuntime


    // Drivers
    drivers.each { driver ->
        testCompile "org.seleniumhq.selenium:selenium-$driver-driver:2.31.0"
    }
}

// optional: if using 'idea' plugin
idea {
  module{
    scopes.PROVIDED.plus += configurations.provided
  }
}

// optional: if using 'eclipse' plugin
eclipse {
  classpath {
    plusConfigurations += configurations.provided
  }
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        testReportDir = reporting.file("$name/tests")
        testResultsDir = file("$buildDir/test-results/$name")
        testClassesDir = sourceSets.integrationTest.output.classesDir
        classpath = sourceSets.integrationTest.runtimeClasspath
        systemProperties['jar.path'] = jar.archivePath

        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

        // If you wanted to set the baseUrl in your build…
        // systemProperty "geb.build.baseUrl", "http://myapp.com"
    }
}

task integrationTest(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties['jar.path'] = jar.archivePath
}

check.dependsOn integrationTest
